[
  {
    "question": "필드, 생성자, 메소드에 대한 설명으로 틀린 것?",
    "choice1": " 필드는 객체의 데이터를 저장한다.",
    "choice2": "생성자는 객체의 초기화를 담당한다",
    "choice3": "메소드는 객체의 동작 부분으로, 실행코드를 가지고 있는 블록이다.",
    "choice4": "클래스는 반드시 필드와 메소드를 가져야 한다.",
    "answer": 4
  },
  {
    "question": "필드에 대한 설명으로 틀린 것은?",
    "choice1": "필드는 메소드에서 사용할 수 있다.",
    "choice2": "인스턴스 필드 초기화는 생성자에서 할 수 있다.",
    "choice3": "필드는 반드시 생성자 선언 전에 선언 되어야 한다. ",
    "choice4": "필드는 초기값을 주지 않더라도 기본값으로 자동 초기화된다.",
    "answer": 3
  },
  {
    "question": "생성자에 대한 설명으로 틀린 것은?",
    "choice1": "객체를 생성하려면 생성자 호출이 반드시 필요한 것은 아니다",
    "choice2": "생성자는 다른 생성자를 호출하기 위해 this()를 사용할 수 있다.",
    "choice3": "생성자가 선언되지 않으면 컴파일러가 기본 생성자를 추가한다.",
    "choice4": "외부에서 객체를 생성할 수 없도록 생성자에 private접근 제한자를 붙일 수 있다.",
    "answer": 1
  },
  {
    "question": "메소드에 대한 설명으로 틀린 것은?",
    "choice1": "리턴값이 없는 메소드는 리턴타입을 void로 해야한다",
    "choice2": "리턴타입이 있는 메소드는 리턴값을 지정하기 위해 반드시 return 문이 있어야 한다.",
    "choice3": "매개값의 수를 모를경우 \"...\"을 이용해서 매개변수를 선언할 수 있다.",
    "choice4": " 메소드의 이름은 중복해서 선언할 수 없다.",
    "answer": 4
  },
  {
    "question": "메소드 오버로딩에 대한 설명으로 틀린 것은?",
    "choice1": "동일한 이름의 메소드를 여러개 선언하는 것을 말한다",
    "choice2": "반드시 리턴타입이 달라야한다",
    "choice3": "매개변수의 타입, 수, 순서를 다르게 선언해야한다",
    "choice4": "매개값의 타입 및 수에 따라 호출될 메소드가 선택된다.",
    "answer": 2
  },
  {
    "question": "인스턴스 멤버와 정적 멤버에 대한 설명으로 틀린 것은?",
    "choice1": "정적멤버는 static으로 선언된 필드와 메소드를 말한다",
    "choice2": "인스턴스 필드는 생성자 및 정적 블록에서 초기화 될 수 있다.",
    "choice3": "정적필드와 정적메소드는 객체 생성 없이 클래스를 통해 접근 할 수 있다.",
    "choice4": "인스턴스 필드와 메소드는 객체를 생성하고 사용해야 한다.",
    "answer": 2
  },
  {
    "question": "final 필드와 상수( static final )에 대한 설명으로 틀린 것은?",
    "choice1": "final 필드와 상수는 초기값이 저장되면 값을 변경할 수 없다.",
    "choice2": "final 필드와 상수는 생성자에서 초기화 될 수 있다.",
    "choice3": "상수의 이름은 대문자로 작성하는 것이 관례이다.",
    "choice4": "상수는 객체 생성 없이 클래스를 통해 사용할 수 있다.",
    "answer": 2
  },
  {
    "question": "다음 중 정적 블록에 대한 설명으로 틀린 것은?",
    "choice1": "정적 블록은 클래스가 메모리로 로딩될 때 자동으로 실행된다.",
    "choice2": "정적 블록은 클래스 내부에 여러개가 선언 되어도 상관 없다.",
    "choice3": "정적 블록은 메로리로 로딩될 때 선언된 순서대로 실행된다.",
    "choice4": "정적 블록에서 this 를 사용할 수 있다.",
    "answer": 4
  }
]
